/*
Deployment script for 74B69C30242715FEEDC616B56ABA11B6_OODGIANTFLYER\FOODGIANTFLYERGENERATOR\FOODGIANTFLYERGENERATOR\DATABASE\FOODGIANTSQLDATABASE.MDF

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "74B69C30242715FEEDC616B56ABA11B6_OODGIANTFLYER\FOODGIANTFLYERGENERATOR\FOODGIANTFLYERGENERATOR\DATABASE\FOODGIANTSQLDATABASE.MDF"
:setvar DefaultFilePrefix "74B69C30242715FEEDC616B56ABA11B6_OODGIANTFLYER\FOODGIANTFLYERGENERATOR\FOODGIANTFLYERGENERATOR\DATABASE\FOODGIANTSQLDATABASE.MDF_"
:setvar DefaultDataPath "C:\Users\Kendrick\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Kendrick\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO

IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors
GO
CREATE TABLE #tmpErrors (Error int)
GO
SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL READ COMMITTED
GO
BEGIN TRANSACTION
GO
PRINT N'Creating [dbo].[FlyerHistory]...';


GO
CREATE TABLE [dbo].[FlyerHistory] (
    [Id]                INT   IDENTITY (1, 1) NOT NULL,
    [ManagerName]       TEXT  NOT NULL,
    [TemplateName]      TEXT  NOT NULL,
    [StoreAddress]      TEXT  NOT NULL,
    [StoreNumber]       TEXT  NOT NULL,
    [FlyerCreationDate] TEXT  NOT NULL,
    [FlyerSaleDates]    TEXT  NOT NULL,
    [SupplyChecked]     BIT   NOT NULL,
    [RaincheckChecked]  BIT   NOT NULL,
    [Item1Name]         TEXT  NOT NULL,
    [Item1Price]        MONEY NOT NULL,
    [Item1Image]        TEXT  NOT NULL,
    [Item2Name]         TEXT  NULL,
    [Item2Price]        MONEY NULL,
    [Item2Image]        TEXT  NULL,
    [Item3Name]         TEXT  NULL,
    [Item3Price]        MONEY NULL,
    [Item3Image]        TEXT  NULL,
    [Item4Name]         TEXT  NULL,
    [Item4Price]        MONEY NULL,
    [Item4Image]        TEXT  NULL,
    [Item5Name]         TEXT  NULL,
    [Item5Price]        MONEY NULL,
    [Item5Image]        TEXT  NULL,
    [Item6Name]         TEXT  NULL,
    [Item6Price]        MONEY NULL,
    [Item6Image]        TEXT  NULL,
    [Item7Name]         TEXT  NULL,
    [Item7Price]        MONEY NULL,
    [Item7Image]        TEXT  NULL,
    [Item8Name]         TEXT  NULL,
    [Item8Price]        MONEY NULL,
    [Item8Image]        TEXT  NULL,
    [Item9Name]         TEXT  NULL,
    [Item9Price]        MONEY NULL,
    [Item9Image]        TEXT  NULL,
    [Item10Name]        TEXT  NULL,
    [Item10Price]       MONEY NULL,
    [Item10Image]       TEXT  NULL,
    [Item11Name]        TEXT  NULL,
    [Item11Price]       MONEY NULL,
    [Item11Image]       TEXT  NULL,
    [Item12Name]        TEXT  NULL,
    [Item12Price]       MONEY NULL,
    [Item12Image]       TEXT  NULL,
    [Item13Name]        TEXT  NULL,
    [Item13Price]       MONEY NULL,
    [Item13Image]       TEXT  NULL,
    [Item14Name]        TEXT  NULL,
    [Item14Price]       MONEY NULL,
    [Item14Image]       TEXT  NULL,
    [Item15Name]        TEXT  NULL,
    [Item15Price]       MONEY NULL,
    [Item15Image]       TEXT  NULL,
    [Item16Name]        TEXT  NULL,
    [Item16Price]       MONEY NULL,
    [Item16Image]       TEXT  NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating unnamed constraint on [dbo].[FlyerHistory]...';


GO
ALTER TABLE [dbo].[FlyerHistory]
    ADD DEFAULT 0 FOR [SupplyChecked];


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating unnamed constraint on [dbo].[FlyerHistory]...';


GO
ALTER TABLE [dbo].[FlyerHistory]
    ADD DEFAULT 0 FOR [RaincheckChecked];


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO

IF EXISTS (SELECT * FROM #tmpErrors) ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT>0 BEGIN
PRINT N'The transacted portion of the database update succeeded.'
COMMIT TRANSACTION
END
ELSE PRINT N'The transacted portion of the database update failed.'
GO
DROP TABLE #tmpErrors
GO
PRINT N'Update complete.';


GO
